# cat << ►_◄ > /dev/null

##############
# key bindings
setw -g xterm-keys on
setw -g mode-keys vi
set -g status-keys vi
# C-x in vim is decrement.  I use it too much to block
#set -g prefix C-b,C-x
set -g prefix C-b

#set mouse-select-pane on

bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

#  reload conf key
bind R source-file ~/.tmux.conf

#  splits
unbind %
unbind '"'
bind | split-window -h
bind \ split-window -h
bind - split-window -v
#bind = next-layout
bind Space last-window


##############
# color,display
set -g status-bg blue
set -g status-fg white
setw -g window-status-current-bg cyan
setw -g utf8 on

#set -g status-left '#[fg=green]#H'
#set-window-option -g window-status-format '#I:#W#F'
#black, red, green, yellow, blue, magenta, cyan, white, colour0 to colour255


##############

set -s escape-time 0
set -s repeat-time 250

# nice, big scrollback buffer (lines)
set -g history-limit 5000

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

##############

bind m run "cut -c3- ~/.tmux.conf | sh -s toggle_mouse"
bind z run 'cut -c3- ~/.tmux.conf | sh -s maximize_pane'

# ►_◄
#
# maximize_pane() {
#   __current_pane=$(tmux display -p '#D')
#  
#   __dead_panes=$(tmux list-panes -s -F '#{pane_dead} #{pane_id} #{pane_title}' | grep -o '^1 %.\+%.\+$' || true)
#   __restore=$(echo "${__dead_panes}" | sed -n -E -e "s/^1 ${__current_pane} \[\+\](%[0-9]+)$/tmux swap-pane -s \1 -t ${__current_pane} \; kill-pane -t ${__current_pane}/p" -e "s/^1 (%[0-9]+) \[\+\]${__current_pane}$/tmux swap-pane -s \1 -t ${__current_pane} \; kill-pane -t \1/p" )
#  
#   if [ x"${__restore}" = x ] ; then
#     [ x"$(tmux list-panes | wc -l | sed 's/^ *//g')" = x1 ] && tmux display "Can't maximize with only one pane" && return
#  
#     __window=$(tmux new-window -P "exec maximized+ 2> /dev/null | tmux setw remain-on-exit on && printf '\033]2;%s\033\\' [+]${__current_pane}")
#     __window=${__window%.*}
#
#     __guard=100
#     while ( [ x"$(tmux list-panes -t ${__window} -F '#S:#I #{pane_dead}')" != x"${__window} "1 ] && [ x"${__guard}" != x0 ] ) ; do sleep 0.01 ; _guard=$((__guard - 1)) ; done
#     if [ x"${__guard}" = 0 ] ; then
#       exit 1
#     fi
#
#     __new_pane=$(tmux display -p '#D')
#     tmux setw remain-on-exit off \; swap-pane -s "${__current_pane}" -t "${__new_pane}"
#   else
#     ${__restore}
#   fi
# }
#
# toggle_mouse() {
#   old=$(tmux show -g -w | grep mode-mouse | cut -d' ' -f2)
#   new=""
#
#   if [ "$old" = "on" ] ; then
#     new="off"
#   else
#     new="on"
#   fi
#
#   tmux set -g mode-mouse $new \;\
#        set -g mouse-resize-pane $new \;\
#        set -g mouse-select-pane $new \;\
#        set -g mouse-select-window $new \;\
#        display "mouse: $new"
# }
#
# $@
#
# # vim:ft=tmux
